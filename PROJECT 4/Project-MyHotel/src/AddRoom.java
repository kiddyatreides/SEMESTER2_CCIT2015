/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author KIDDY
 */

import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
public class AddRoom extends javax.swing.JFrame {

    /**
     * Creates new form AddRoom
     */
    public AddRoom() {
        initComponents();
        getContentPane().setBackground(Color.BLACK);
        AutoGenerateID auto = new AutoGenerateID();
        tf_IDRoom.setText(auto.autoIDRoom());
        getDataForCombo();
        tf_price.setText(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_IDRoom = new javax.swing.JTextField();
        tf_price = new javax.swing.JTextField();
        cb_IDClass = new javax.swing.JComboBox();
        btn_submit = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(450, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(450, 400));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Room");
        jLabel1.setMaximumSize(new java.awt.Dimension(250, 100));
        jLabel1.setMinimumSize(new java.awt.Dimension(250, 100));
        jLabel1.setPreferredSize(new java.awt.Dimension(250, 100));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(119, 63, 218, 100);

        jLabel2.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID Room");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(105, 207, 52, 15);

        jLabel3.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID Class");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(105, 245, 46, 14);

        jLabel4.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(105, 283, 29, 15);

        tf_IDRoom.setEditable(false);
        getContentPane().add(tf_IDRoom);
        tf_IDRoom.setBounds(191, 204, 146, 20);

        tf_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_priceKeyTyped(evt);
            }
        });
        getContentPane().add(tf_price);
        tf_price.setBounds(191, 280, 146, 20);

        cb_IDClass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_IDClassItemStateChanged(evt);
            }
        });
        cb_IDClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_IDClassActionPerformed(evt);
            }
        });
        getContentPane().add(cb_IDClass);
        cb_IDClass.setBounds(191, 242, 146, 20);

        btn_submit.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        btn_submit.setText("Submit");
        btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_submitActionPerformed(evt);
            }
        });
        btn_submit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                btn_submitKeyTyped(evt);
            }
        });
        getContentPane().add(btn_submit);
        btn_submit.setBounds(191, 318, 90, 23);

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(10, 10, 90, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
     private void getDataForCombo(){
        try{
            
            Koneksi kon = new Koneksi();
            Connection con = kon.open();
            
            String sql = "Select id_class,name from tb_class";
            
            Statement state = con.createStatement();
            ResultSet rs = state.executeQuery(sql);
            
            while(rs.next()){
                cb_IDClass.addItem(rs.getString("id_class"));
                
            }
            cb_IDClass.setSelectedIndex(-1);
            
            con.close();
        }
        catch(Exception e ){
            System.err.println(e);
        }
    }
    
    
     private int Validation(){
        int flag = 0;
        String error = "";
        
        
        if(tf_IDRoom.getText().equals("")){
            flag = 1;
            error += "ID Class cannot be blank.\n";
        }
        if(tf_price.getText().equals("")){
            flag = 1;
            error += "Amount of Price cannot be blank.\n";
        }
       
        if(cb_IDClass.getSelectedIndex()==-1)
        {
            flag = 1;
            error += "ID Class cannot be blank.\n";
        }
        
        
        if(flag == 0)
        {
            
        }
        else
        {
            JOptionPane.showMessageDialog(this, error);
        }
        return flag;
    }
    
    private void btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_submitActionPerformed
        // TODO add your handling code here:
        
         if(Validation() == 0){
            String idroom = tf_IDRoom.getText();
            String price = tf_price.getText();
            String idclass = cb_IDClass.getSelectedItem().toString();
            String status = "Available";
            

            try
            {
                    Koneksi kon = new Koneksi();
                    Connection con = kon.open();
                    String sql = "insert tb_room2 values(?,?,?,?)";
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.setString(1, idroom);
                    ps.setString(2, idclass);
                    ps.setString(3, price);
                    ps.setString(4, status);
                    
                    int rows =ps.executeUpdate();
                    if(rows!=0)
                    {
                        JOptionPane.showMessageDialog(this, "Data Successfully Added");

                        ClearForm();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan");
                    }


            }
            catch(Exception e)
            {
                System.err.println(e);
            }
        }
        
    }//GEN-LAST:event_btn_submitActionPerformed

    private void cb_IDClassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_IDClassItemStateChanged
        // TODO add your handling code here:
        try
        {
            Koneksi kon = new Koneksi();
            Connection con = kon.open();
            
            String sql = "select * from tb_class where id_class = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, cb_IDClass.getSelectedItem().toString());
            ResultSet rs = ps.executeQuery();
            
            if(rs.next())
            {
                
                tf_price.setText(rs.getString("price"));
                
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Data not found.");
                
            }
        }
            catch(Exception e)
            {
                    System.err.println(e);
            }
    }//GEN-LAST:event_cb_IDClassItemStateChanged

    private void cb_IDClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_IDClassActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_cb_IDClassActionPerformed

    private void btn_submitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btn_submitKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btn_submitKeyTyped

    private void tf_priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_priceKeyTyped
        // TODO add your handling code here:
        
          char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') || (c == evt.VK_BACK_SPACE) || (c == evt.VK_DELETE))) 
        {
            evt.consume();
        }
    }//GEN-LAST:event_tf_priceKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        
        this.hide();

    }//GEN-LAST:event_jButton2ActionPerformed

    
    public void ClearForm(){
       tf_IDRoom.setText(null);
       tf_price.setText(null);
       cb_IDClass.setSelectedIndex(-1);
       AutoGenerateID auto = new AutoGenerateID();
       tf_IDRoom.setText(auto.autoIDRoom());
       
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_submit;
    private javax.swing.JComboBox cb_IDClass;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField tf_IDRoom;
    private javax.swing.JTextField tf_price;
    // End of variables declaration//GEN-END:variables
}
